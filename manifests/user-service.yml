# Kubernetes manifest for setting up the user service
# Copyright (C) 2025  Arsen ArsenoviÄ‡ <aarsenovic8422rn@raf.rs>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: user-service
  name: user-service
  namespace: banka-4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - image: harbor.k8s.elab.rs/banka-4/user-service:latest
        imagePullPolicy: Always
        name: user-service
        env:
          - name: SPRING_DATASOURCE_URL
            valueFrom:
              secretKeyRef:
                name: banka-4-pguser-user-service
                key: jdbc-uri
          - name: SPRING_RABBITMQ_USERNAME
            value: 'user'
          - name: SPRING_RABBITMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: banka-4-rabbitmq
                key: rabbitmq-password
          - name: SPRING_RABBITMQ_HOST
            value: banka-4-rabbitmq.banka-4.svc.cluster.local
          - name: JWT_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: jwt-secret
                key: key
          - name: JWT_EXPIRATION
            value: '180000'
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: user-service
  name: user-service
  namespace: banka-4
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: user-service
  type: ClusterIP
